import random


board = []

def create_board():
    for i in range(3):
        board.append([" ", " ", " "])

def printboard(board):
    for i, row in enumerate(board):
        print(" | ".join(str(cell) for cell in row))
        if i != len(board) - 1:
            print("-" * (len(row) * 4 - 3))

def check_win(board):
    # Check rows
    for row in board:
        if row[0] == row[1] == row[2] and row[0] != " ":
            return True

    # Check columns
    for col in range(3):
        if board[0][col] == board[1][col] == board[2][col] and board[0][col] != " ":
            return True

    # Check diagonals
    if board[0][0] == board[1][1] == board[2][2] and board[0][0] != " ":
        return True
    if board[0][2] == board[1][1] == board[2][0] and board[0][2] != " ":
        return True
    
    return False

create_board()
placed = set()
count = 0
flip = 0  # 0 = player, 1 = computer

while count != 9:
    printboard(board)
    
    if flip == 0:
        # Player's turn
        try:
            i = int(input("Enter row: "))
            j = int(input("Enter column: "))
            if (i, j) in placed or not (0 <= i <= 2 and 0 <= j <= 2):
                print("Invalid move. Try again.")
                continue
            board[i][j] = "X"
            placed.add((i, j))
            count += 1

            # Check for win after player's move
            if check_win(board):
                printboard(board)
                print("Player wins!")
                break

            flip = 1  # switch to computer
        except ValueError:
            print("Please enter valid integers.")
    else:
        # Computer's turn
        while True:
            i = random.randint(0, 2)
            j = random.randint(0, 2)
            if (i, j) not in placed:
                board[i][j] = "O"
                placed.add((i, j))
                print(f"Computer placed at {i}, {j}")
                count += 1
                # Check for win after computer's move
                if check_win(board):
                    printboard(board)
                    print("Computer wins!")
                    break
                flip = 0  # switch to player
                break

    # If all spots are filled and no winner, it's a draw
    if count == 9 and not check_win(board):
        printboard(board)
        print("It's a draw!")
        break











vacuum_position = 'A'
room_a = 'D'
room_b = 'D'

goal_room_a = 'C'
goal_room_b = 'C'

while room_a != goal_room_a or room_b != goal_room_b:
    print(f"Current State: Vacuum is in {vacuum_position}, Room A is {room_a}, Room B is {room_b}")

    if vacuum_position == 'A':
        if room_a == 'D':
            print("Cleaning Room A...")
            room_a = 'C'
        else:
            print("Room A is already clean.")
        
        if room_b != goal_room_b:
            print("Moving to Room B...")
            vacuum_position = 'B'

    elif vacuum_position == 'B':
        if room_b == 'D':
            print("Cleaning Room B...")
            room_b = 'C'
        else:
            print("Room B is already clean.")
        
        if room_a != goal_room_a:
            print("Moving to Room A...")
            vacuum_position = 'A'

print(f"Goal reached! Both rooms are clean: Room A = {room_a}, Room B = {room_b}")
